<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WindowsFirewallHelper</name>
    </assembly>
    <members>
        <member name="T:WindowsFirewallHelper.Addresses.DefaultGateway">
            <inheritdoc />
            <summary>
                A class representing default gateway as an address
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.DefaultGateway.AddressString">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.DefaultGateway.Parse(System.String)">
            <summary>
                Converts an address string to a <see cref="T:WindowsFirewallHelper.Addresses.DefaultGateway" /> instance.
            </summary>
            <returns>
                A <see cref="T:WindowsFirewallHelper.Addresses.DefaultGateway" /> instance.
            </returns>
            <param name="str">
                A string that contains an address
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> is null. </exception>
            <exception cref="T:System.FormatException"><paramref name="str" /> is not a valid address. </exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.DefaultGateway.TryParse(System.String,WindowsFirewallHelper.Addresses.DefaultGateway@)">
            <summary>
                Determines whether a string is a valid default gateway address
            </summary>
            <returns>
                <see langword="true" /> if <paramref name="str" /> is a valid default gateway address; otherwise,
                <see langword="false" />.
            </returns>
            <param name="str">The string to validate.</param>
            <param name="address">The <see cref="T:WindowsFirewallHelper.Addresses.DefaultGateway" /> instance that represents the passed string.</param>
        </member>
        <member name="T:WindowsFirewallHelper.Addresses.DHCPService">
            <inheritdoc />
            <summary>
                A class representing a DHCP service as an address
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.DHCPService.AddressString">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.DHCPService.Parse(System.String)">
            <summary>
                Converts an address string to a <see cref="T:WindowsFirewallHelper.Addresses.DHCPService" /> instance.
            </summary>
            <returns>
                A <see cref="T:WindowsFirewallHelper.Addresses.DHCPService" /> instance.
            </returns>
            <param name="str">
                A string that contains an address
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> is null. </exception>
            <exception cref="T:System.FormatException"><paramref name="str" /> is not a valid address. </exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.DHCPService.TryParse(System.String,WindowsFirewallHelper.Addresses.DHCPService@)">
            <summary>
                Determines whether a string is a valid DHCP service
            </summary>
            <returns>
                <see langword="true" /> if <paramref name="str" /> is a valid DHCP service; otherwise, <see langword="false" />.
            </returns>
            <param name="str">The string to validate.</param>
            <param name="service">The <see cref="T:WindowsFirewallHelper.Addresses.DHCPService" /> instance that represents the passed string.</param>
        </member>
        <member name="T:WindowsFirewallHelper.Addresses.DNSService">
            <inheritdoc />
            <summary>
                A class representing a DNS service as an address
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.DNSService.AddressString">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.DNSService.Parse(System.String)">
            <summary>
                Converts an address string to a <see cref="T:WindowsFirewallHelper.Addresses.DNSService" /> instance.
            </summary>
            <returns>
                A <see cref="T:WindowsFirewallHelper.Addresses.DNSService" /> instance.
            </returns>
            <param name="str">
                A string that contains an address
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> is null. </exception>
            <exception cref="T:System.FormatException"><paramref name="str" /> is not a valid address. </exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.DNSService.TryParse(System.String,WindowsFirewallHelper.Addresses.DNSService@)">
            <summary>
                Determines whether a string is a valid DNS service
            </summary>
            <returns>
                <see langword="true" /> if <paramref name="str" /> is a valid DNS service; otherwise, <see langword="false" />.
            </returns>
            <param name="str">The string to validate.</param>
            <param name="service">The <see cref="T:WindowsFirewallHelper.Addresses.DNSService" /> instance that represents the passed string.</param>
        </member>
        <member name="T:WindowsFirewallHelper.Addresses.IPRange">
            <inheritdoc cref="T:WindowsFirewallHelper.IAddress" />
            <summary>
                A class representing a range of Internet Protocol addresses
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.IPRange.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
                Creates an instance of the IPRange class using the provided values as the start and the end of the IP range
            </summary>
            <param name="address1">One end of the range</param>
            <param name="address2">Other end of the range</param>
            <exception cref="T:System.ArgumentException">Addresses should be of a same family</exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.IPRange.#ctor(System.Net.IPAddress)">
            <summary>
                Creates an instance of the IPRange class using the provided value as both the start and the end of the IP range
            </summary>
            <param name="address">Both end of the range</param>
            <exception cref="T:System.ArgumentException">Addresses should be of a same family</exception>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.IPRange.EndAddress">
            <summary>
                Gets and sets the upper bound of the range
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.IPRange.StartAddress">
            <summary>
                Gets and sets the lower bound of the range
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.IPRange.ToString">
            <summary>
                Returns a string that represents the current <see cref="T:WindowsFirewallHelper.Addresses.IPRange" />.
            </summary>
            <returns>
                A string that represents the current <see cref="T:WindowsFirewallHelper.Addresses.IPRange" />.
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.IPRange.Equals(WindowsFirewallHelper.Addresses.IPRange)">
            <summary>
                Compares two IP address ranges.
            </summary>
            <returns>
                <see langword="true" /> if the two address ranges are equal; otherwise, <see langword="false" />.
            </returns>
            <param name="other">An <see cref="T:WindowsFirewallHelper.Addresses.IPRange" /> instance to compare to the current instance. </param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.IPRange.op_Equality(WindowsFirewallHelper.Addresses.IPRange,WindowsFirewallHelper.Addresses.IPRange)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.Addresses.IPRange" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.Addresses.IPRange" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.Addresses.IPRange" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.IPRange.op_Inequality(WindowsFirewallHelper.Addresses.IPRange,WindowsFirewallHelper.Addresses.IPRange)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.Addresses.IPRange" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.Addresses.IPRange" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.Addresses.IPRange" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.IPRange.Parse(System.String)">
            <summary>
                Converts an address string to a <see cref="T:WindowsFirewallHelper.Addresses.IPRange" /> instance.
            </summary>
            <returns>
                A <see cref="T:WindowsFirewallHelper.Addresses.IPRange" /> instance.
            </returns>
            <param name="str">
                A string that contains an address
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> is null. </exception>
            <exception cref="T:System.FormatException"><paramref name="str" /> is not a valid address. </exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.IPRange.TryParse(System.String,WindowsFirewallHelper.Addresses.IPRange@)">
            <summary>
                Determines whether a string is a valid IP address range.
            </summary>
            <returns>
                <see langword="true" /> if <paramref name="str" /> is a valid IP address range; otherwise, <see langword="false" />
                .
            </returns>
            <param name="str">The string to validate.</param>
            <param name="addressRange">The <see cref="T:WindowsFirewallHelper.Addresses.IPRange" /> version of the string.</param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.IPRange.Equals(System.Object)">
            <summary>
                Compares two IP address ranges.
            </summary>
            <returns>
                <see langword="true" /> if the two address ranges are equal; otherwise, <see langword="false" />.
            </returns>
            <param name="obj">An <see cref="T:Object" /> instance to compare to the current instance. </param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.IPRange.GetHashCode">
            <summary>
                Serves as a hash function for a particular type.
            </summary>
            <returns>
                A hash code for the current <see cref="T:WindowsFirewallHelper.Addresses.IPRange" />.
            </returns>
        </member>
        <member name="T:WindowsFirewallHelper.Addresses.LocalSubnet">
            <summary>
                A class representing local subnet as an address
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.LocalSubnet.AddressString">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.LocalSubnet.Parse(System.String)">
            <summary>
                Converts an address string to a <see cref="T:WindowsFirewallHelper.Addresses.LocalSubnet" /> instance.
            </summary>
            <returns>
                A <see cref="T:WindowsFirewallHelper.Addresses.LocalSubnet" /> instance.
            </returns>
            <param name="str">
                A string that contains an address
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> is null. </exception>
            <exception cref="T:System.FormatException"><paramref name="str" /> is not a valid address. </exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.LocalSubnet.TryParse(System.String,WindowsFirewallHelper.Addresses.LocalSubnet@)">
            <summary>
                Determines whether a string is a valid local subnet address
            </summary>
            <returns>
                <see langword="true" /> if <paramref name="str" /> is a valid local subnet address; otherwise,
                <see langword="false" />.
            </returns>
            <param name="str">The string to validate.</param>
            <param name="service">The <see cref="T:WindowsFirewallHelper.Addresses.LocalSubnet" /> instance that represents the passed string.</param>
        </member>
        <member name="T:WindowsFirewallHelper.Addresses.NetworkAddress">
            <inheritdoc cref="T:WindowsFirewallHelper.IAddress" />
            <summary>
                A Class representing a range of Internet Protocol addresses using an <see cref="T:System.Net.IPAddress" /> and a
                Subnet Mask
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.Addresses.NetworkAddress.IPv4SingleHostSubnet">
            <summary>
                Returns the single host subnet for IPv4 IPs (255.255.255.255)
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.Addresses.NetworkAddress.IPv6SingleHostSubnet">
            <summary>
                Returns the single host subnet for IPv6 IPs (ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff)
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.NetworkAddress.#ctor(System.Net.IPAddress)">
            <summary>
                Creates an instance of the <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> class using an <see cref="T:System.Net.IPAddress" /> and
                255.255.255.255 or ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff as the Subnet Mask
            </summary>
            <param name="address">IPAddress to create an instance of <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> with</param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.NetworkAddress.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
                Creates an instance of the <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> class using an <see cref="T:System.Net.IPAddress" /> and a Subnet Mask
            </summary>
            <param name="address">
                <see cref="T:System.Net.IPAddress" /> to be used as the base IPAddress of the <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" />
            </param>
            <param name="subnetMask">
                <see cref="T:System.Net.IPAddress" /> to be used as the Subnet Mask of the <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" />
            </param>
            <exception cref="T:System.ArgumentException">Addresses should be of a same family</exception>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.NetworkAddress.Address">
            <summary>
                Gets or sets the base <see cref="T:System.Net.IPAddress" /> in which this <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> is based on
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.NetworkAddress.EndAddress">
            <summary>
                Gets the calculated upper bound of the range
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.NetworkAddress.StartAddress">
            <summary>
                Gets the calculated lower bound of the range
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.NetworkAddress.SubnetMask">
            <summary>
                Gets or sets the Subnet Mask in which this <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> is based on
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.NetworkAddress.ToString">
            <summary>
                Returns a string that represents the current <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" />.
            </summary>
            <returns>
                A string that represents the current <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" />.
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.NetworkAddress.Equals(WindowsFirewallHelper.Addresses.NetworkAddress)">
            <summary>
                Compares two network address.
            </summary>
            <returns>
                <see langword="true" /> if the two network address are equal; otherwise, <see langword="false" />.
            </returns>
            <param name="other">An <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> instance to compare to the current instance. </param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.NetworkAddress.op_Equality(WindowsFirewallHelper.Addresses.NetworkAddress,WindowsFirewallHelper.Addresses.NetworkAddress)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.NetworkAddress.op_Inequality(WindowsFirewallHelper.Addresses.NetworkAddress,WindowsFirewallHelper.Addresses.NetworkAddress)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.NetworkAddress.Parse(System.String)">
            <summary>
                Converts an address string to a <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> instance.
            </summary>
            <returns>
                A <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> instance.
            </returns>
            <param name="str">
                A string that contains an address
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> is null. </exception>
            <exception cref="T:System.FormatException"><paramref name="str" /> is not a valid address. </exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.NetworkAddress.TryParse(System.String,WindowsFirewallHelper.Addresses.NetworkAddress@)">
            <summary>
                Determines whether a string is a valid network address.
            </summary>
            <returns>
                <see langword="true" /> if <paramref name="str" /> is a valid network address; otherwise, <see langword="false" />
                .
            </returns>
            <param name="str">The string to validate.</param>
            <param name="addressNetwork">The <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" /> version of the string.</param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.NetworkAddress.Equals(System.Object)">
            <summary>
                Compares two network addresses.
            </summary>
            <returns>
                <see langword="true" /> if the two network address are equal; otherwise, <see langword="false" />.
            </returns>
            <param name="obj">An <see cref="T:Object" /> instance to compare to the current instance. </param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.NetworkAddress.GetHashCode">
            <summary>
                Serves as a hash function for a particular type.
            </summary>
            <returns>
                A hash code for the current <see cref="T:WindowsFirewallHelper.Addresses.NetworkAddress" />.
            </returns>
        </member>
        <member name="T:WindowsFirewallHelper.Addresses.SingleIP">
            <inheritdoc cref="T:WindowsFirewallHelper.IAddress" />
            <summary>
                A class representing an Internet Protocol address
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.Addresses.SingleIP.Any">
            <summary>
                Provides an IP address that matches any IPAddress. This field is read-only.
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.Addresses.SingleIP.Broadcast">
            <summary>
                Provides the IP broadcast address. This field is read-only.
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.Addresses.SingleIP.IPv6Any">
            <summary>
                Provides an IP address that matches any IPv6 IPAddress. This field is read-only.
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.Addresses.SingleIP.IPv6Loopback">
            <summary>
                Provides the IP loopback address. This property is read-only.
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.Addresses.SingleIP.IPv6None">
            <summary>
                Obsolete - Provides an IP address that indicates that no IPv6 IPAddress is mentioned. This property is read-only.
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.Addresses.SingleIP.Loopback">
            <summary>
                Provides the IP loopback address. This field is read-only.
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.Addresses.SingleIP.None">
            <summary>
                Obsolete - Provides an IP address that indicates that no IPAddress is mentioned. This property is read-only.
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.#ctor(System.Int64)">
            <summary>
                Creates a new instance of the SingleIP class with IP Address passed as an integer value.
            </summary>
            <param name="newAddress">Integer value of the IP Address</param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.#ctor(System.Byte[])">
            <summary>
                Creates a new instance of the SingleIP class with IP Address passed as a <see langword="byte" /> array.
            </summary>
            <param name="address"><see langword="byte" /> array containing the IP Address</param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.#ctor(System.Net.IPAddress)">
            <summary>
                Creates a new instance of the <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> class using the provided <see cref="T:System.Net.IPAddress" />.
            </summary>
            <param name="ip"></param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.ToString">
            <summary>
                Converts an Internet address to its standard notation.
            </summary>
            <returns>
                A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.Equals(System.Net.IPAddress)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.Equals(WindowsFirewallHelper.Addresses.SingleIP)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.IsLoopback(WindowsFirewallHelper.Addresses.SingleIP)">
            <summary>
                Indicates whether the specified IP address is the loopback address.
            </summary>
            <returns>
                true if <paramref name="address" /> is the loopback address; otherwise, false.
            </returns>
            <param name="address">An IP address. </param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.op_Equality(WindowsFirewallHelper.Addresses.SingleIP,WindowsFirewallHelper.Addresses.SingleIP)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.op_Equality(WindowsFirewallHelper.Addresses.SingleIP,System.Net.IPAddress)">
            <summary>
                Compares one <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object with another <see cref="T:System.Net.IPAddress" /> object for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object</param>
            <param name="right">A <see cref="T:System.Net.IPAddress" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.op_Equality(System.Net.IPAddress,WindowsFirewallHelper.Addresses.SingleIP)">
            <summary>
                Compares one <see cref="T:System.Net.IPAddress" /> object with another <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object for equality
            </summary>
            <param name="left">A <see cref="T:System.Net.IPAddress" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.op_Inequality(WindowsFirewallHelper.Addresses.SingleIP,WindowsFirewallHelper.Addresses.SingleIP)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.op_Inequality(WindowsFirewallHelper.Addresses.SingleIP,System.Net.IPAddress)">
            <summary>
                Compares one <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object with another <see cref="T:System.Net.IPAddress" /> object for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object</param>
            <param name="right">A <see cref="T:System.Net.IPAddress" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.op_Inequality(System.Net.IPAddress,WindowsFirewallHelper.Addresses.SingleIP)">
            <summary>
                Compares one <see cref="T:System.Net.IPAddress" /> object with another <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object for equality
            </summary>
            <param name="left">A <see cref="T:System.Net.IPAddress" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.Parse(System.String)">
            <summary>
                Converts an IP address string to an <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> instance.
            </summary>
            <returns>
                An <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> instance.
            </returns>
            <param name="ipString">
                A string that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal
                notation for IPv6.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="ipString" /> is null. </exception>
            <exception cref="T:System.FormatException"><paramref name="ipString" /> is not a valid IP address. </exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.TryParse(System.String,System.Net.IPAddress@)">
            <summary>
                NOT SUPPORTED
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.TryParse(System.String,WindowsFirewallHelper.Addresses.SingleIP@)">
            <summary>
                Determines whether a string is a valid IP address.
            </summary>
            <returns>
                true if <paramref name="ipString" /> is a valid IP address; otherwise, false.
            </returns>
            <param name="ipString">The string to validate.</param>
            <param name="address">The <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> version of the string.</param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SingleIP.ToIPAddress">
            <summary>
                Cast the current <see cref="T:WindowsFirewallHelper.Addresses.SingleIP" /> object to <see cref="T:System.Net.IPAddress" /> and returns it.
            </summary>
            <returns>Returns the corresponding <see cref="T:System.Net.IPAddress" /> object</returns>
        </member>
        <member name="T:WindowsFirewallHelper.Addresses.SpecialAddress">
            <inheritdoc cref="T:WindowsFirewallHelper.IAddress" />
            <summary>
                This class is the parent class of all special address values
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.SpecialAddress.AddressString">
            <summary>
                Should returns the constant value of the special address
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.ToString">
            <inheritdoc cref="T:WindowsFirewallHelper.IAddress" />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.Equals(WindowsFirewallHelper.Addresses.SpecialAddress)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.Equals(System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.op_Equality(WindowsFirewallHelper.Addresses.SpecialAddress,WindowsFirewallHelper.Addresses.SpecialAddress)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.op_Inequality(WindowsFirewallHelper.Addresses.SpecialAddress,WindowsFirewallHelper.Addresses.SpecialAddress)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.Parse(System.String)">
            <summary>
                Converts an address string to a <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> instance.
            </summary>
            <returns>
                A <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> instance.
            </returns>
            <param name="str">
                A string that contains an address
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> is null. </exception>
            <exception cref="T:System.FormatException"><paramref name="str" /> is not a valid address. </exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.TryParse(System.String,WindowsFirewallHelper.Addresses.SpecialAddress@)">
            <summary>
                Determines whether a string is a valid special service address.
            </summary>
            <returns>
                <see langword="true" /> if <paramref name="str" /> is a valid special service address; otherwise,
                <see langword="false" />.
            </returns>
            <param name="str">The string to validate.</param>
            <param name="specialAddress">The <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> version of the string.</param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.Parse``1(System.String)">
            <summary>
                Converts an address string to an instance of one of children of the <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> class.
            </summary>
            <returns>
                An instance from one of children of the <see cref="T:WindowsFirewallHelper.Addresses.SpecialAddress" /> class.
            </returns>
            <param name="str">
                A string that contains an address
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> is null. </exception>
            <exception cref="T:System.FormatException"><paramref name="str" /> is not a valid address. </exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.TryParse``1(System.String,``0@)">
            <summary>
                Determines whether a string is a valid address
            </summary>
            <returns>
                <see langword="true" /> if <paramref name="str" /> is a valid address; otherwise, <see langword="false" />.
            </returns>
            <param name="str">The string to validate.</param>
            <param name="service">The instance that represents the passed string.</param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.Equals(System.Object)">
            <summary>
                Compares address instances.
            </summary>
            <returns>
                <see langword="true" /> if the two instances are equal; otherwise, <see langword="false" />.
            </returns>
            <param name="obj">An <see cref="T:Object" /> instance to compare to the current instance. </param>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.SpecialAddress.GetHashCode">
            <summary>
                Serves as a hash function for a particular type.
            </summary>
            <returns>
                A hash code for the current instance.
            </returns>
        </member>
        <member name="T:WindowsFirewallHelper.Addresses.WINSService">
            <inheritdoc />
            <summary>
                A class representing a WINS service as an address
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Addresses.WINSService.AddressString">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.WINSService.Parse(System.String)">
            <summary>
                Converts an address string to a <see cref="T:WindowsFirewallHelper.Addresses.WINSService" /> instance.
            </summary>
            <returns>
                A <see cref="T:WindowsFirewallHelper.Addresses.WINSService" /> instance.
            </returns>
            <param name="str">
                A string that contains an address
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="str" /> is null. </exception>
            <exception cref="T:System.FormatException"><paramref name="str" /> is not a valid address. </exception>
        </member>
        <member name="M:WindowsFirewallHelper.Addresses.WINSService.TryParse(System.String,WindowsFirewallHelper.Addresses.WINSService@)">
            <summary>
                Determines whether a string is a valid WINS service
            </summary>
            <returns>
                <see langword="true" /> if <paramref name="str" /> is a valid WINS service; otherwise, <see langword="false" />.
            </returns>
            <param name="str">The string to validate.</param>
            <param name="service">The <see cref="T:WindowsFirewallHelper.Addresses.WINSService" /> instance that represents the passed string.</param>
        </member>
        <member name="P:WindowsFirewallHelper.Collections.FirewallLegacyApplicationCollection.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyApplicationCollection.Remove(WindowsFirewallHelper.COMInterop.INetFwAuthorizedApplication)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyApplicationCollection.GetCollectionKey(WindowsFirewallHelper.COMInterop.INetFwAuthorizedApplication)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyApplicationCollection.GetEnumVariant">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyApplicationCollection.InternalAdd(WindowsFirewallHelper.COMInterop.INetFwAuthorizedApplication)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyApplicationCollection.InternalCount">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyApplicationCollection.InternalItem(System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyApplicationCollection.InternalRemove(System.String)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.Collections.FirewallLegacyPortCollection.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyPortCollection.Remove(WindowsFirewallHelper.COMInterop.INetFwOpenPort)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyPortCollection.GetCollectionKey(WindowsFirewallHelper.COMInterop.INetFwOpenPort)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyPortCollection.GetEnumVariant">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyPortCollection.InternalAdd(WindowsFirewallHelper.COMInterop.INetFwOpenPort)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyPortCollection.InternalCount">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyPortCollection.InternalItem(WindowsFirewallHelper.Collections.FirewallLegacyPortCollectionKey)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyPortCollection.InternalRemove(WindowsFirewallHelper.Collections.FirewallLegacyPortCollectionKey)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyPortCollectionKey.Equals(WindowsFirewallHelper.Collections.FirewallLegacyPortCollectionKey)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyPortCollectionKey.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyPortCollectionKey.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.Add(WindowsFirewallHelper.IFirewallRule)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.Clear">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.Contains(WindowsFirewallHelper.IFirewallRule)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.CopyTo(WindowsFirewallHelper.IFirewallRule[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.Count">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.Remove(WindowsFirewallHelper.IFirewallRule)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.Item(System.UInt16,WindowsFirewallHelper.COMInterop.NetFwIPProtocol)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.Remove(System.UInt16,WindowsFirewallHelper.COMInterop.NetFwIPProtocol)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyRulesCollection.Remove(System.String)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.Collections.FirewallLegacyServiceCollection.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyServiceCollection.GetCollectionKey(WindowsFirewallHelper.COMInterop.INetFwService)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyServiceCollection.GetEnumVariant">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyServiceCollection.InternalAdd(WindowsFirewallHelper.COMInterop.INetFwService)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyServiceCollection.InternalCount">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyServiceCollection.InternalItem(WindowsFirewallHelper.COMInterop.NetFwServiceType)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallLegacyServiceCollection.InternalRemove(WindowsFirewallHelper.COMInterop.NetFwServiceType)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallProductsCollection.#ctor(WindowsFirewallHelper.COMInterop.INetFwProducts)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.Collections.FirewallProductsCollection.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallProductsCollection.IndexOf(WindowsFirewallHelper.FirewallProduct)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallProductsCollection.ConvertManagedToNative(WindowsFirewallHelper.FirewallProduct)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallProductsCollection.ConvertNativeToManaged(WindowsFirewallHelper.COMInterop.INetFwProduct)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallProductsCollection.GetCollectionKey(WindowsFirewallHelper.FirewallProduct)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallProductsCollection.GetEnumVariant">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallProductsCollection.InternalAdd(WindowsFirewallHelper.COMInterop.INetFwProduct)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallProductsCollection.InternalCount">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallProductsCollection.InternalItem(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallProductsCollection.InternalRemove(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.#ctor(WindowsFirewallHelper.COMInterop.INetFwRules)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.Remove(`0)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.ConvertManagedToNative(`0)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.ConvertNativeToManaged(WindowsFirewallHelper.COMInterop.INetFwRule)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.GetCollectionKey(`0)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.GetEnumVariant">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.InternalAdd(WindowsFirewallHelper.COMInterop.INetFwRule)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.InternalCount">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.InternalItem(System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.Collections.FirewallWASRulesCollection`1.InternalRemove(System.String)">
            <inheritdoc />
        </member>
        <member name="T:WindowsFirewallHelper.Collections.IFirewallLegacyRulesCollection">
            <summary>
                Represents a collection of firewall legacy rules containing both port based and application based rules
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Collections.IFirewallLegacyRulesCollection.Item(System.String)">
            <summary>
                Gets a legacy application rule
                Note: The rule returned by this method may not be complete or even correct if multiple rules meet the criteria. Use
                with caution.
            </summary>
            <param name="applicationPath">The rule's full application path</param>
            <returns>An instance of the <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> class on success or null on failure</returns>
        </member>
        <member name="P:WindowsFirewallHelper.Collections.IFirewallLegacyRulesCollection.Item(System.UInt16,WindowsFirewallHelper.COMInterop.NetFwIPProtocol)">
            <summary>
                Gets a legacy port rule
                Note: The rule returned by this method may not be complete or even correct if multiple rules meet the criteria. Use
                with caution.
            </summary>
            <param name="portNumber">The rule's port number</param>
            <param name="protocol">The rule's protocol</param>
            <returns>An instance of the <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule" /> class on success or null on failure</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Collections.IFirewallLegacyRulesCollection.Remove(System.UInt16,WindowsFirewallHelper.COMInterop.NetFwIPProtocol)">
            <summary>
                Removes a legacy port rule using the port number and the protocol
            </summary>
            <param name="portNumber">The rule's port number</param>
            <param name="protocol">The rule's protocol</param>
            <returns>Returns a <see cref="T:System.Boolean" /> value indicating the success of the operation</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Collections.IFirewallLegacyRulesCollection.Remove(System.String)">
            <summary>
                Removes a legacy application rule using the full application path
            </summary>
            <param name="applicationPath">The rule's full application path</param>
            <returns>Returns a <see cref="T:System.Boolean" /> value indicating the success of the operation</returns>
        </member>
        <member name="T:WindowsFirewallHelper.Collections.IFirewallProductsCollection">
            <summary>
                Represents the collection of registered firewall products
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Collections.IFirewallProductsCollection.Item(System.Int32)">
            <summary>
                Gets the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to get</param>
            <returns>The element at the specified index</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Collections.IFirewallProductsCollection.IndexOf(WindowsFirewallHelper.FirewallProduct)">
            <summary>
                Determines the index of a specific item in the collection
            </summary>
            <param name="product">The element to get the collection index for</param>
            <returns>The index of product if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="T:WindowsFirewallHelper.Collections.IFirewallWASRulesCollection`1">
            <summary>
                Represents a collection of firewall with advanced security rules
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.Collections.IFirewallWASRulesCollection`1.Item(System.String)">
            <summary>
                Gets a rule by name
                Note: The rule returned by this method is the first rule that meets the criteria. Use with caution.
            </summary>
            <param name="name">The rule's name</param>
            <returns>An instance of the <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> class on success or null on failure</returns>
        </member>
        <member name="M:WindowsFirewallHelper.Collections.IFirewallWASRulesCollection`1.Remove(System.String)">
            <summary>
                Removes a rule by the name
            </summary>
            <param name="name">The rule's name</param>
            <returns>Returns a <see cref="T:System.Boolean" /> value indicating the success of the operation</returns>
        </member>
        <member name="T:WindowsFirewallHelper.COMTypeResolver">
            <summary>
                Contains methods facilitating access to local and remove COM+ types
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.COMTypeResolver.MachineName">
            <summary>
                Gets the machine name assigned to this instance or <see langword="null"/>
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.COMTypeResolver.#ctor(System.String)">
            <summary>
                Creates a new instance of <see cref="T:WindowsFirewallHelper.COMTypeResolver"/> allowing COM+ connection to remote machines
            </summary>
            <param name="machineName">The remote machine name or IP address</param>
        </member>
        <member name="M:WindowsFirewallHelper.COMTypeResolver.#ctor">
            <summary>
                Creates a new instance of <see cref="T:WindowsFirewallHelper.COMTypeResolver"/> providing COM+ connection to local machine
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.EdgeTraversalAction">
            <summary>
                Edge Traversal behavior
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.EdgeTraversalAction.Deny">
            <summary>
                Fully block application, service, or port to globally addressable and accessible from outside a NAT edge device.
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.EdgeTraversalAction.Allow">
            <summary>
                Fully allow application, service, or port to globally addressable and accessible from outside a NAT edge device.
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.EdgeTraversalAction.DefferToApp">
            <summary>
                Application makes the decision to allow unsolicited traffic from the Internet through a network address translation
                (NAT) edge device
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.EdgeTraversalAction.DefferToUser">
            <summary>
                User makes the decision to allow unsolicited traffic from the Internet through a network address translation (NAT)
                edge device
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">
            <summary>
                The exception that is thrown when an invoked method or operation is not supported with the Windows Firewall Legacy
                API
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException.#ctor">
            <summary>
                Creates a new instance of the <see cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException" /> class
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException.#ctor(System.String)">
            <summary>
                Creates a new instance of the <see cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException" /> class with a string as the message
            </summary>
            <param name="message">A <see cref="T:System.String" /> to be used as the message of the exception</param>
        </member>
        <member name="T:WindowsFirewallHelper.Exceptions.FirewallWASInvalidProtocolException">
            <summary>
                The exception that is thrown when an operation is not supported with the selected <see cref="T:WindowsFirewallHelper.FirewallProtocol" />
                in the Windows Firewall With Advanced Security API
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Exceptions.FirewallWASInvalidProtocolException.#ctor(System.String)">
            <summary>
                Creates a new instance of the FirewallAPIv2InvalidProtocolException exception
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.Exceptions.FirewallWASNotSupportedException">
            <summary>
                The exception that is thrown when an invoked method or operation is not supported with the Windows Firewall With
                Advanced Security API
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Exceptions.FirewallWASNotSupportedException.#ctor">
            <summary>
                Creates a new instance of the <see cref="T:WindowsFirewallHelper.Exceptions.FirewallWASNotSupportedException" /> class
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.Exceptions.FirewallWASNotSupportedException.#ctor(System.String)">
            <summary>
                Creates a new instance of the <see cref="T:WindowsFirewallHelper.Exceptions.FirewallWASNotSupportedException" /> class with a string as the message
            </summary>
            <param name="message">A <see cref="T:System.String" /> to be used as the message of the exception</param>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallAction">
            <summary>
                Firewall rule actions
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallAction.Block">
            <summary>
                Block rule
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallAction.Allow">
            <summary>
                Allow rule
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallAPIVersion">
            <summary>
                Versions of API
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallAPIVersion.None">
            <summary>
                Invalid or unknown version of API
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallAPIVersion.FirewallLegacy">
            <summary>
                Windows Firewall Legacy API (Win XP+)
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallAPIVersion.FirewallWAS">
            <summary>
                Windows Firewall With Advanced Security API (Windows Vista+)
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallAPIVersion.FirewallWASWin7">
            <summary>
                Windows Firewall With Advanced Security API (Windows 7+)
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallAPIVersion.FirewallWASWin8">
            <summary>
                Windows Firewall With Advanced Security API (Windows 8+)
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallDirection">
            <summary>
                Firewall rule direction
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallDirection.Inbound">
            <summary>
                Inbound data
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallDirection.Outbound">
            <summary>
                Outbound data
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallLegacy">
            <summary>
                Contains properties and methods of Windows Firewall v1
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.#ctor">
            <summary>
                Creates a new instance of this class on the current thread for the local machine and leaves the cross thread control to the user of the
                class.
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.#ctor(WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new instance of this class on the current thread for a remote machine and leaves the cross thread control to the user of the
                class.
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.Reload">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacy.TypeResolver">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacy.Instance">
            <summary>
                Gets the current singleton instance of this class
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacy.IsLocallySupported">
            <summary>
                Gets a Boolean value showing if the firewall is supported locally
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.IsSupported(WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Gets a Boolean value showing if the firewall is supported remotely
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacy.Profiles">
            <summary>
                Gets the list of all available profiles of the firewall
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacy.Rules">
            <summary>
                Gets the list of all registered rules of the firewall
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.String,WindowsFirewallHelper.FirewallProtocol)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreateApplicationRule(System.String,WindowsFirewallHelper.FirewallAction,System.String,WindowsFirewallHelper.FirewallProtocol)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreateApplicationRule(System.String,WindowsFirewallHelper.FirewallAction,System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreateApplicationRule(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.UInt16,WindowsFirewallHelper.FirewallProtocol)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreatePortRule(System.String,WindowsFirewallHelper.FirewallAction,System.UInt16,WindowsFirewallHelper.FirewallProtocol)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreatePortRule(System.String,WindowsFirewallHelper.FirewallAction,System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#CreatePortRule(System.String,System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#GetActiveProfile">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#GetProfile(WindowsFirewallHelper.FirewallProfiles)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacy.Name">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#Profiles">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacy.WindowsFirewallHelper#IFirewall#Rules">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,System.String)">
            <summary>
                Creates a rule about an executable file (application) to be registered to a firewall profile
            </summary>
            <param name="profiles">The profile or profiles that the rule belongs to</param>
            <param name="name">Name of the rule</param>
            <param name="filename">Address of the executable file that the rule applies to</param>
            <returns>Returns the newly created <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> instance</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.CreateApplicationRule(System.String,System.String)">
            <summary>
                Creates a rule about an executable file (application) to be registered to the currently active firewall profile
            </summary>
            <param name="name">Name of the rule</param>
            <param name="filename">Address of the executable file that the rule applies to</param>
            <returns>Returns the newly created <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> instance</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,System.UInt16)">
            <summary>
                Creates a rule about a TCP port to be registered to a firewall profile regardless of its protocol
            </summary>
            <param name="profiles">The profile that the rule belongs to</param>
            <param name="name">Name of the rule</param>
            <param name="portNumber">Port number that the rule applies to</param>
            <returns>Returns the newly created <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule" /> instance</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.CreatePortRule(System.String,System.UInt16)">
            <summary>
                Creates a rule about a TCP port to be registered to the currently active firewall profile regardless of its
                protocol
            </summary>
            <param name="name">Name of the rule</param>
            <param name="portNumber">Port number that the rule applies to</param>
            <returns>Returns the newly created <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule" /> instance</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.GetActiveProfile">
            <summary>
                Returns the active firewall profile, if any
            </summary>
            <returns>
                The active firewall profile object or null if no firewall profile is currently active
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacy.GetProfile(WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Returns a specific firewall profile
            </summary>
            <param name="profile">Requested firewall profile</param>
            <returns>Firewall profile object</returns>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallLegacyProfile">
            <inheritdoc />
            <summary>
                Contains properties of a Windows Firewall v1 profile
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacyProfile.Rules">
            <summary>
                Gets the list of all firewall rules for this profile
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacyProfile.WindowsFirewallHelper#IFirewallProfile#BlockAllInboundTraffic">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacyProfile.WindowsFirewallHelper#IFirewallProfile#DefaultInboundAction">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.FirewallAPIv1.FirewallAPIv1NotSupportedException">
                Setting a value for this
                property is not supported
            </exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacyProfile.WindowsFirewallHelper#IFirewallProfile#DefaultOutboundAction">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.FirewallAPIv1.FirewallAPIv1NotSupportedException">
                Setting a value for this
                property is not supported
            </exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacyProfile.Enable">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacyProfile.IsActive">
            <inheritdoc />
            <summary>
                Gets a Boolean value showing if this firewall profile is the currently active profile.
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacyProfile.ShowNotifications">
            <inheritdoc />
            <summary>
                Gets or sets a value indicating if the user should get notifications about rules of this profile
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacyProfile.Type">
            <inheritdoc />
            <summary>
                Gets a FirewallProfiles showing the type of this firewall profile
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallLegacyProfile.UnicastResponsesToMulticastBroadcast">
            <inheritdoc />
            <summary>
                Gets or sets a value indicating if the firewall should send unicast responses to the multicast broadcasts
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallLegacyProfile.ToString">
            <summary>
                Returns a string that represents the current object.
            </summary>
            <returns>
                A string that represents the current object.
            </returns>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallManager">
            <summary>
                A static class to manage the current active firewall
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallManager.Instance">
            <summary>
                Returns a instance of the active firewall
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown if firewall API version is not supported.</exception>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallManager.TryGetInstance(WindowsFirewallHelper.IFirewall@)">
            <summary>
                Attempts to get an instance of the active firewall.
            </summary>
            <param name="instance">Outputs the active firewall instance, if successful.</param>
            <returns>Returns true if successful, otherwise false.</returns>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallManager.IsServiceRunning">
            <summary>
                Gets a Boolean value indicating if the firewall service is currently running
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallManager.RegisteredProducts">
            <summary>
                Returns the list of all registered third party firewalls
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown if third party firewalls are not supported.</exception>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallManager.TryGetRegisteredProducts(WindowsFirewallHelper.Collections.IFirewallProductsCollection@)">
            <summary>
                Attempts to get the list of all registered third party firewalls.
            </summary>
            <param name="collection">Outputs the collection of third party firewalls, if successful.</param>
            <returns>Returns true if successful, otherwise false.</returns>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallManager.Version">
            <summary>
                Returns the API version of the current active Windows Firewall
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallManager.RegisterProduct(WindowsFirewallHelper.FirewallProduct,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Register an instance of a third party firewall management class locally
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallManager.RegisterProduct(WindowsFirewallHelper.FirewallProduct)">
            <summary>
                Register an instance of a third party firewall management class remotely
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallManager.GetRegisteredProducts(WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Returns the list of all registered third party firewalls remotely
            </summary>
            <exception cref="T:System.NotSupportedException">Thrown if third party firewalls are not supported.</exception>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallModifyStatePolicy">
            <summary>
                Firewall modify state policies
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallModifyStatePolicy.Ok">
            <summary>
                All modifications take effects immediately
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallModifyStatePolicy.OverrodeByGroupPolicy">
            <summary>
                Firewall is controlled by group policy
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallModifyStatePolicy.InboundBlocked">
            <summary>
                All inbound traffic is blocked regardless of registered rules
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallPortType">
            <summary>
                Firewall port types
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallPortType.All">
            <summary>
                All local ports
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallPortType.Specific">
            <summary>
                Specific list of local port numbers
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallPortType.RPCDynamicPorts">
            <summary>
                TCP Dynamic RPC port range
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallPortType.RPCEndpointMapper">
            <summary>
                TCP RPC endpoint mapper port range
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallPortType.IPHTTPS">
            <summary>
                TCP IP-HTTPS port (443)
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallPortType.EdgeTraversal">
            <summary>
                UDP Teredo traversed packets
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallPortType.PlayToDiscovery">
            <summary>
                UDP Play To Discovery packets
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallProduct">
            <summary>
                Represents a third party firewall product
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProduct.#ctor(System.String)">
            <summary>
                Creates a new <see cref="T:WindowsFirewallHelper.FirewallProduct" /> instance locally to be registered later
            </summary>
            <param name="name">The name of the product</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProduct.#ctor(System.String,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new <see cref="T:WindowsFirewallHelper.FirewallProduct" /> instance remotely to be registered later
            </summary>
            <param name="name">The name of the product</param>
            <param name="typeResolver">The object resolver for COM+ objects</param>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallProduct.FriendlyName">
            <summary>
                Gets the resolved name of this firewall product
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallProduct.IsLocallySupported">
            <summary>
                Gets a Boolean value indicating if third party firewall product registration is locally available and supported
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProduct.IsSupported(WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Gets a Boolean value indicating if third party firewall product registration is remotely available and supported
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallProduct.Name">
            <summary>
                Gets or sets the name of this firewall product
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallProduct.TypeResolver">
            <summary>
                Gets the active COM+ Object resolver instance
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallProduct.RuleCategories">
            <summary>
                Gets or sets the rule categories that this firewall product is capable of handling
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallProduct.SignedExecutableFilename">
            <summary>
                Gets the address of signed executable file that is responsible for this firewall product functionalities
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProduct.GetCOMObject">
            <summary>
                Gets the underlying COM object for this firewall product
            </summary>
            <returns>The underlying COM object</returns>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallProductRegistrationHandle">
            <summary>
                Represents a firewall product registration handle; the registration will be removed when this object is released.
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallProductRegistrationHandle.IsInvalid">
            <summary>
                Returns a boolean value indicating if this instance contains a valid handle
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProductRegistrationHandle.Dispose">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProductRegistrationHandle.Release">
            <summary>
                Releases the handle
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProductRegistrationHandle.Finalize">
            <inheritdoc />
        </member>
        <member name="T:WindowsFirewallHelper.FirewallProfiles">
            <summary>
                Firewall rule profile
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProfiles.Domain">
            <summary>
                Domain Profile
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProfiles.Private">
            <summary>
                Private Profile
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProfiles.Public">
            <summary>
                Public Profile
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallProtocol">
            <summary>
                A class representing a FirewallProtocol
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.Any">
            <summary>
                Matches both TCP and UDP protocols for port rules and all protocols for other type of rules
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.GRE">
            <summary>
                Generic Routing Encapsulation Protocol
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.HOPOPT">
            <summary>
                Hop-by-Hop Option Protocol
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.ICMPv4">
            <summary>
                Internet Control Message Protocol for IPv4
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.ICMPv6">
            <summary>
                Internet Control Message Protocol for IPv6
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.IGMP">
            <summary>
                Internet Group Management Protocol
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.IPv6">
            <summary>
                Internet Protocol Version 6
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.IPv6Frag">
            <summary>
                Internet Protocol Version 6 Fragmentation Header
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.IPv6NoNxt">
            <summary>
                Internet Protocol Version 6 No Next Header
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.IPv6Opts">
            <summary>
                Internet Protocol Version 6 Options Header
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.IPv6Route">
            <summary>
                Internet Protocol Version 6 Route Header
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.L2TP">
            <summary>
                Layer 2 Tunneling Protocol
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.PGM">
            <summary>
                Pragmatic General Multicast Protocol
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.TCP">
            <summary>
                Transmission Control Protocol
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.UDP">
            <summary>
                User Datagram Protocol
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallProtocol.VRRP">
            <summary>
                Virtual Router Redundancy Protocol
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.#ctor(System.Byte)">
            <summary>
                Creates a new <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> based on the protocol number
            </summary>
            <param name="protocolNumber">The protocol number to create <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> from</param>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallProtocol.ProtocolNumber">
            <summary>
                Returns the underlying protocol number of this object
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.Equals(WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Determines whether the specified<see cref="T:WindowsFirewallHelper.FirewallProtocol" /> is equal to the current
                <see cref="T:WindowsFirewallHelper.FirewallProtocol" />.
            </summary>
            <param name="other"> The object to compare with the current object.</param>
            <returns>
                true if the specified <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> is equal to the current <see cref="T:WindowsFirewallHelper.FirewallProtocol" />;
                otherwise, false.
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.Equals(System.Int32)">
            <summary>
                Determines whether the specified protocol number is equal to the current
                <see cref="T:WindowsFirewallHelper.FirewallProtocol" />.
            </summary>
            <param name="other"> The protocol number to compare with the current object.</param>
            <returns>
                true if the specified protocol number is equal to the current <see cref="T:WindowsFirewallHelper.FirewallProtocol" />;
                otherwise, false.
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.op_Equality(WindowsFirewallHelper.FirewallProtocol,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.op_Equality(WindowsFirewallHelper.FirewallProtocol,System.Int32)">
            <summary>
                Compares one <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object with another <see cref="T:System.Int32" /> for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object</param>
            <param name="right">An <see cref="T:System.Int32" /></param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.op_Equality(System.Int32,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Compares one <see cref="T:System.Int32" /> with another <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object for equality
            </summary>
            <param name="left">An <see cref="T:System.Int32" /></param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.op_Inequality(WindowsFirewallHelper.FirewallProtocol,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.op_Inequality(WindowsFirewallHelper.FirewallProtocol,System.Int32)">
            <summary>
                Compares one <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object with another <see cref="T:System.Int32" /> for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object</param>
            <param name="right">An <see cref="T:System.Int32" /></param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.op_Inequality(System.Int32,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Compares one <see cref="T:System.Int32" /> with another <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object for equality
            </summary>
            <param name="left">An <see cref="T:System.Int32" /></param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.TryParse(System.String,WindowsFirewallHelper.FirewallProtocol@)">
            <summary>
                Tries to create a <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object from the the string
            </summary>
            <param name="str">The string to be analyzed</param>
            <param name="firewallProtocol">Returning <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> object</param>
            <returns>
                <see langword="true" /> if process ends well and <see cref="T:WindowsFirewallHelper.FirewallProtocol" /> created; otherwise
                <see langword="false" />
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.Equals(System.Object)">
            <summary>
                Determines whether the specified <see cref="T:System.Object" /> is equal to the current
                <see cref="T:WindowsFirewallHelper.FirewallProtocol" />.
            </summary>
            <returns>
                true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:WindowsFirewallHelper.FirewallProtocol" />;
                otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.GetHashCode">
            <summary>
                Serves as a hash function for a particular type.
            </summary>
            <returns>
                A hash code for the current <see cref="T:WindowsFirewallHelper.FirewallProtocol" />.
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallProtocol.ToString">
            <summary>
                Returns a string that represents the current <see cref="T:WindowsFirewallHelper.FirewallProtocol" />.
            </summary>
            <returns>
                A string that represents the current <see cref="T:WindowsFirewallHelper.FirewallProtocol" />.
            </returns>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallRuleCategory">
            <summary>
                Third-party firewall rule categories to have ownership from Windows Firewall
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallRuleCategory.Boot">
            <summary>
                Boot category
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallRuleCategory.Stealth">
            <summary>
                Stealth category
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallRuleCategory.Firewall">
            <summary>
                Firewall rules
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallRuleCategory.ConnectionSecurity">
            <summary>
                IPSec rules
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule">
            <inheritdoc cref="T:WindowsFirewallHelper.IFirewallRule" />
            <summary>
                Contains properties of a Windows Firewall v1 application rule
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.#ctor(System.String,System.String,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new application rule for Windows Firewall v1
            </summary>
            <param name="name">Name of the rule</param>
            <param name="processAddress">Address of the executable file</param>
            <param name="profiles">The profile that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.#ctor(System.String,System.String,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new application rule for Windows Firewall v1
            </summary>
            <param name="name">Name of the rule</param>
            <param name="processAddress">Address of the executable file</param>
            <param name="profiles">The profile that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.IsLocallySupported">
            <summary>
                Returns a Boolean value indicating if these class is available in the current machine
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.Equals(WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule)">
            <summary>
                Determines whether the specified<see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> is equal to the current
                <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" />.
            </summary>
            <param name="other"> The object to compare with the current object.</param>
            <returns>
                true if the specified <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> is equal to the current
                <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" />;
                otherwise, false.
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.Equals(WindowsFirewallHelper.IFirewallRule)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.WindowsFirewallHelper#IFirewallRule#Action">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.ApplicationName">
            <summary>
                Gets or sets the address of the executable file that this rule is about
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.WindowsFirewallHelper#IFirewallRule#Direction">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.FriendlyName">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.IsEnable">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.WindowsFirewallHelper#IFirewallRule#LocalAddresses">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.WindowsFirewallHelper#IFirewallRule#LocalPorts">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.WindowsFirewallHelper#IFirewallRule#LocalPortType">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.Name">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.Profiles">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.WindowsFirewallHelper#IFirewallRule#Protocol">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.RemoteAddresses">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.WindowsFirewallHelper#IFirewallRule#RemotePorts">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.Scope">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.WindowsFirewallHelper#IFirewallRule#ServiceName">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.op_Equality(WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule,WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.op_Inequality(WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule,WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.ToString">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyApplicationRule.GetCOMObjects(WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Returns the rule underlying object for an specific profile
            </summary>
            <param name="profile">The firewall profile to get the underlying COM object of this rule for</param>
            <returns>The underlying COM object of this rule</returns>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule">
            <inheritdoc cref="T:WindowsFirewallHelper.IFirewallRule" />
            <summary>
                Contains properties of a Windows Firewall v1 port rule
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.#ctor(System.String,System.UInt16,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new port rule for Windows Firewall v1
            </summary>
            <param name="name">Name of the rule</param>
            <param name="port">Port number of the rule</param>
            <param name="profiles">The profiles that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.#ctor(System.String,System.UInt16,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new port rule for Windows Firewall v1
            </summary>
            <param name="name">Name of the rule</param>
            <param name="port">Port number of the rule</param>
            <param name="profiles">The profiles that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.IsLocallySupported">
            <summary>
                Returns a Boolean value indicating if these class is available in the current machine
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.LocalPort">
            <summary>
                Gets or sets the local port that the rule applies to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.TypeResolver">
            <summary>
                Gets the active COM+ object resolver
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.Equals(WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.Equals(WindowsFirewallHelper.IFirewallRule)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.WindowsFirewallHelper#IFirewallRule#Action">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.WindowsFirewallHelper#IFirewallRule#ApplicationName">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.WindowsFirewallHelper#IFirewallRule#Direction">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.FriendlyName">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.IsEnable">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.WindowsFirewallHelper#IFirewallRule#LocalAddresses">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.WindowsFirewallHelper#IFirewallRule#LocalPorts">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">
                The array passes to this property as value should have one and
                only one element
            </exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.WindowsFirewallHelper#IFirewallRule#LocalPortType">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported.</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.Name">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.Profiles">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.Protocol">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">
                Acceptable protocols for Windows Firewall Legacy are UDP, TCP and
                Any.
            </exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.RemoteAddresses">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.WindowsFirewallHelper#IFirewallRule#RemotePorts">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallLegacyNotSupportedException">Setting a value for this property is not supported</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.Scope">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.WindowsFirewallHelper#IFirewallRule#ServiceName">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.op_Equality(WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule,WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.op_Inequality(WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule,WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.ToString">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallLegacyPortRule.GetCOMObjects(WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Returns the rule underlying object for an specific profile
            </summary>
            <param name="profile">The firewall profile to get the underlying COM object of this rule for</param>
            <returns>The underlying COM object of this rule</returns>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule">
            <inheritdoc cref="T:WindowsFirewallHelper.IFirewallRule" />
            <summary>
                Contains properties of a Windows Firewall with Advanced Security rule
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.#ctor(System.String,System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new application rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="filename">Address of the executable file</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.#ctor(System.String,System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new application rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="filename">Address of the executable file</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.#ctor(System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new general rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.#ctor(System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new general rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.#ctor(System.String,System.UInt16,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new port rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="port">Port number of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.#ctor(System.String,System.UInt16,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new port rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="port">Port number of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Description">
            <summary>
                Gets or sets the description string of this rule
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.EdgeTraversal">
            <summary>
                Gets or sets if EdgeTraversal is available with this rule
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.FriendlyDescription">
            <summary>
                Gets resolved description string of this rule
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.FriendlyGrouping">
            <summary>
                Gets or sets the rule grouping string
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Grouping">
            <summary>
                Gets or sets the rule grouping string
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.ICMPTypesAndCodes">
            <summary>
                Gets or sets the list of the acceptable ICMP Messages with this rule
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Interfaces">
            <summary>
                Gets or sets the network interfaces that this rule applies to by name
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.IsLocallySupported">
            <summary>
                Returns a Boolean value indicating if this class is available in the current machine
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.IsSupported(WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Returns a Boolean value indicating if this class is available in the remote machine
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.NetworkInterfaceTypes">
            <summary>
                Gets or sets the network interfaces that this rule applies to by type
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.UnderlyingObject">
            <summary>
                Returns the underlying Windows Firewall Object
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Equals(WindowsFirewallHelper.FirewallRules.FirewallWASRule)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Equals(WindowsFirewallHelper.IFirewallRule)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Action">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.ApplicationName">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Direction">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.FriendlyName">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.IsEnable">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.LocalAddresses">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.LocalPorts">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.LocalPortType">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallWASInvalidProtocolException" accessor="set">Protocol and local port type are not compatible.</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Name">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Profiles">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Protocol">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.RemoteAddresses">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.RemotePorts">
            <inheritdoc />
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallWASInvalidProtocolException" accessor="set">
                Port number can only be specified for the UDP
                and TCP protocols.
            </exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Scope">
            <inheritdoc />
            <exception cref="T:System.ArgumentException" accessor="set">Use the RemoteAddresses property to set the exact remote addresses</exception>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRule.ServiceName">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.op_Equality(WindowsFirewallHelper.FirewallRules.FirewallWASRule,WindowsFirewallHelper.FirewallRules.FirewallWASRule)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.op_Inequality(WindowsFirewallHelper.FirewallRules.FirewallWASRule,WindowsFirewallHelper.FirewallRules.FirewallWASRule)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.ToString">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRule.GetCOMObject">
            <summary>
                Returns the underlying COM object
            </summary>
            <returns>The underlying COM object</returns>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7">
            <inheritdoc cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" />
            <summary>
                Contains properties of a Windows Firewall with Advanced Security rule in Windows 7 and above
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.#ctor(System.String,System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new application rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="filename">Address of the executable file</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.#ctor(System.String,System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new application rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="filename">Address of the executable file</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.#ctor(System.String,System.UInt16,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new port rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="port">Port number of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.#ctor(System.String,System.UInt16,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new port rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="port">Port number of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.#ctor(System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new general rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.#ctor(System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new general rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.EdgeTraversalOptions">
            <summary>
                Gets or sets the behavior of this rule about the Edge Traversal
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.IsLocallySupported">
            <summary>
                Returns a Boolean value indicating if this class is available in the current machine
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.IsSupported(WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Returns a Boolean value indicating if this class is available in the remote machine
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.UnderlyingObject">
            <summary>
                Returns the underlying Windows Firewall Object
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.Equals(WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.op_Equality(WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7,WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.op_Inequality(WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7,WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7.GetCOMObject">
            <summary>
                Returns the underlying COM object
            </summary>
            <returns>The underlying COM object</returns>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8">
            <inheritdoc cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin7" />
            <summary>
                Contains properties of a Windows Firewall with Advanced Security rule in Windows 8 and above
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.#ctor(System.String,System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new application rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="filename">Address of the executable file</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.#ctor(System.String,System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new application rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="filename">Address of the executable file</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.#ctor(System.String,System.UInt16,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new port rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="port">Port number of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.#ctor(System.String,System.UInt16,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new port rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="port">Port number of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.#ctor(System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Creates a new general rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.#ctor(System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,WindowsFirewallHelper.FirewallProfiles,WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new general rule for Windows Firewall with Advanced Security
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action that this rule defines</param>
            <param name="direction">Data direction in which this rule applies to</param>
            <param name="profiles">The profile that this rule belongs to</param>
            <param name="typeResolver">The COM+ object resolver</param>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.ApplicationPackageId">
            <summary>
                Gets or sets the PackageId of the Windows Store Application that this rule applies to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.IPSecSecurityLevel">
            <summary>
                Gets or sets the expected Internet Protocol Security level of this rule
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.IsLocallySupported">
            <summary>
                Returns a Boolean value indicating if this class is available in the current machine
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.IsSupported(WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Returns a Boolean value indicating if this class is available in the remote machine
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.LocalUserAuthorizedList">
            <summary>
                Gets or sets the list of the authorized local users
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.RemoteMachineAuthorizedList">
            <summary>
                Gets or sets the list of the authorized remote machines
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.RemoteUserAuthorizedList">
            <summary>
                Gets or sets the list of the authorized remote users
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.UnderlyingObject">
            <summary>
                Returns the underlying Windows Firewall Object
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.UserOwner">
            <summary>
                Gets or sets the Domain and User Name of the user that owns this rule
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.Equals(WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.op_Equality(WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8,WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.op_Inequality(WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8,WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallRules.FirewallWASRuleWin8.GetCOMObject">
            <summary>
                Returns the underlying COM object
            </summary>
            <returns>The underlying COM object</returns>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallScope">
            <summary>
                Firewall rule scope
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallScope.All">
            <summary>
                All scopes
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallScope.LocalSubnet">
            <summary>
                Local subnet only
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallScope.Specific">
            <summary>
                Specific list of addresses
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallWAS">
            <summary>
                Contains properties and methods of Windows Firewall with Advanced Security
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.#ctor">
            <summary>
                Creates a new instance of this class on the current thread for the local machine and leaves the cross thread control to the user of the
                class.
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.#ctor(WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Creates a new instance of this class on the current thread for a remote machine and leaves the cross thread control to the user of the
                class.
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.Reload">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWAS.TypeResolver">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWAS.Instance">
            <summary>
                Gets the current singleton instance of this class
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWAS.IsLocallySupported">
            <summary>
                Gets a Boolean value showing if the firewall is supported locally
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.IsSupported(WindowsFirewallHelper.COMTypeResolver)">
            <summary>
                Gets a Boolean value showing if the firewall is supported remotely
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWAS.LocalModifyStatePolicy">
            <summary>
                Gets a value indicating if adding or setting a rule or group of rules will take effect in the current firewall
                profile
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWAS.Profiles">
            <summary>
                Gets the list of all available profiles of the firewall
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWAS.RuleGroups">
            <summary>
                Gets the list of all registered rule groups of the firewall
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWAS.Rules">
            <summary>
                Gets the list of all registered rules of the firewall
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.String,WindowsFirewallHelper.FirewallProtocol)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.String)">
            <inheritdoc />
            <exception cref="T:System.NotSupportedException">This class is not supported on this machine</exception>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreateApplicationRule(System.String,WindowsFirewallHelper.FirewallAction,System.String,WindowsFirewallHelper.FirewallProtocol)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreateApplicationRule(System.String,WindowsFirewallHelper.FirewallAction,System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreateApplicationRule(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.UInt16,WindowsFirewallHelper.FirewallProtocol)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreatePortRule(System.String,WindowsFirewallHelper.FirewallAction,System.UInt16,WindowsFirewallHelper.FirewallProtocol)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreatePortRule(System.String,WindowsFirewallHelper.FirewallAction,System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#CreatePortRule(System.String,System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#GetActiveProfile">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#GetProfile(WindowsFirewallHelper.FirewallProfiles)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWAS.Name">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#Profiles">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWAS.WindowsFirewallHelper#IFirewall#Rules">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,System.String,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Creates a rule about an executable file (application) to be registered to a firewall profile
            </summary>
            <param name="profiles">The profile or profiles that the rule belongs to</param>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="direction">The rule control direction</param>
            <param name="filename">Address of the executable file that the rule applies to</param>
            <param name="protocol">Protocol that the rule applies to</param>
            <returns>Returns the newly created <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> instance or one of its children</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.CreateApplicationRule(System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,System.String,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Creates a rule about an executable file (application) to be registered to the currently active firewall profile
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="direction">The rule control direction</param>
            <param name="filename">Address of the executable file that the rule applies to</param>
            <param name="protocol">Protocol that the rule applies to</param>
            <returns>Returns the newly created <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> instance or one of its children</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,System.UInt16,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Creates a rule about a port to be registered to a firewall profile
            </summary>
            <param name="profiles">The profile or profiles that the rule belongs to</param>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="direction">The rule control direction</param>
            <param name="portNumber">Port number that the rule applies to</param>
            <param name="protocol">Protocol that the rule applies to</param>
            <returns>Returns the newly created <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> instance or one of its children</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.CreatePortRule(System.String,WindowsFirewallHelper.FirewallAction,WindowsFirewallHelper.FirewallDirection,System.UInt16,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Creates a rule about a port to be registered to the currently firewall profile
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="direction">The rule control direction</param>
            <param name="portNumber">Port number that the rule applies to</param>
            <param name="protocol">Protocol that the rule applies to</param>
            <returns>Returns the newly created <see cref="T:WindowsFirewallHelper.FirewallRules.FirewallWASRule" /> instance or one of its children</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.GetActiveProfile">
            <summary>
                Returns the active firewall profile, if any
            </summary>
            <returns>
                The active firewall profile object or null if no firewall profile is currently active
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.GetGroupByName(System.String)">
            <summary>
                Returns a rule group instance by name provided.
                Any value used for name even if not yet used for a rule will returns a valid instance.
            </summary>
            <param name="name">The name of the group to be requested</param>
            <returns>An instance of <see cref="T:WindowsFirewallHelper.FirewallWASRuleGroup" /> class</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.GetProfile(WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Returns a specific firewall profile
            </summary>
            <param name="profile">Requested firewall profile</param>
            <returns>Firewall profile object</returns>
            <exception cref="T:WindowsFirewallHelper.Exceptions.FirewallWASNotSupportedException">The asked profile is not supported with this class</exception>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWAS.ResetDefault">
            <summary>
                Restores the local firewall configuration to its default state.
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallWASInternetControlMessage">
            <summary>
                A class representing a Internet Control Message (ICM) type
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.FirewallWASInternetControlMessage.Any">
            <summary>
                All ICM types and codes
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.#ctor(System.Byte)">
            <summary>
                Creates a new instance of the InternetControlMessage class with the specified ICM type number
            </summary>
            <param name="type">ICM type number to create the instance from</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.#ctor(System.Byte,System.Byte)">
            <summary>
                Creates a new instance of the InternetControlMessage class with the specified ICM type number and type code
            </summary>
            <param name="type">ICM type number to create the instance from</param>
            <param name="code">ICM type code to create the instance from</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.#ctor(WindowsFirewallHelper.InternetControlMessageKnownTypesV6)">
            <summary>
                Creates a new instance of the InternetControlMessage class with the specified known ICM type
            </summary>
            <param name="type">ICM type to create the instance from</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.#ctor(WindowsFirewallHelper.InternetControlMessageKnownTypesV6,System.Byte)">
            <summary>
                Creates a new instance of the InternetControlMessage class with the specified known ICM type and type code
            </summary>
            <param name="type">ICM type to create the instance from</param>
            <param name="code">ICM type code to create the instance from</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.#ctor(WindowsFirewallHelper.InternetControlMessageKnownTypes)">
            <summary>
                Creates a new instance of the InternetControlMessage class with the specified known ICM type
            </summary>
            <param name="type">ICM type to create the instance from</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.#ctor(WindowsFirewallHelper.InternetControlMessageKnownTypes,System.Byte)">
            <summary>
                Creates a new instance of the InternetControlMessage class with the specified known ICM type and type code
            </summary>
            <param name="type">ICM type to create the instance from</param>
            <param name="code">ICM type code to create the instance from</param>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASInternetControlMessage.Code">
            <summary>
                Gets the corresponding ICM type code
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASInternetControlMessage.Type">
            <summary>
                Gets the corresponding ICM type number
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.Equals(WindowsFirewallHelper.FirewallWASInternetControlMessage)">
            <summary>
                Determines whether the specified<see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> is equal to the current
                <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" />.
            </summary>
            <param name="other"> The object to compare with the current object.</param>
            <returns>
                true if the specified <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> is equal to the current
                <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" />;
                otherwise, false.
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.op_Equality(WindowsFirewallHelper.FirewallWASInternetControlMessage,WindowsFirewallHelper.FirewallWASInternetControlMessage)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.op_Inequality(WindowsFirewallHelper.FirewallWASInternetControlMessage,WindowsFirewallHelper.FirewallWASInternetControlMessage)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.TryParse(System.String,WindowsFirewallHelper.FirewallWASInternetControlMessage@)">
            <summary>
                Tries to create a <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> object from the the string
            </summary>
            <param name="str">The string to be analyzed</param>
            <param name="icm">Returning <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> object</param>
            <returns>
                <see langword="true" /> if process ends well and <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" /> created;
                otherwise
                <see langword="false" />
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.Equals(System.Object)">
            <summary>
                Determines whether the specified <see cref="T:System.Object" /> is equal to the current
                <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" />.
            </summary>
            <returns>
                true if the specified <see cref="T:System.Object" /> is equal to the current
                <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" />;
                otherwise, false.
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to compare with the current
                <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" />.
            </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.GetHashCode">
            <summary>
                Serves as a hash function for a particular type.
            </summary>
            <returns>
                A hash code for the current <see cref="T:WindowsFirewallHelper.FirewallWASInternetControlMessage" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASInternetControlMessage.ToString">
            <summary>
                Returns a string that represents the current object.
            </summary>
            <returns>
                A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:WindowsFirewallHelper.FirewallWASProfile">
            <summary>
                Contains properties of a Windows Firewall with Advanced Security profile
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASProfile.BlockAllInboundTraffic">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASProfile.DefaultInboundAction">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASProfile.DefaultOutboundAction">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASProfile.Enable">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASProfile.IsActive">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASProfile.ShowNotifications">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASProfile.Type">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASProfile.UnicastResponsesToMulticastBroadcast">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASProfile.ToString">
            <inheritdoc />
        </member>
        <member name="T:WindowsFirewallHelper.FirewallWASRuleGroup">
            <summary>
                Represents a Windows firewall with advanced security rule group
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASRuleGroup.FriendlyName">
            <summary>
                Gets the resolved name of this rule group
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.FirewallWASRuleGroup.Name">
            <summary>
                Gets the name of this rule group
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASRuleGroup.Equals(WindowsFirewallHelper.FirewallWASRuleGroup)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASRuleGroup.op_Equality(WindowsFirewallHelper.FirewallWASRuleGroup,WindowsFirewallHelper.FirewallWASRuleGroup)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallWASRuleGroup" /> objects for equality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallWASRuleGroup" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallWASRuleGroup" /> object</param>
            <returns>true if two sides are equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASRuleGroup.op_Inequality(WindowsFirewallHelper.FirewallWASRuleGroup,WindowsFirewallHelper.FirewallWASRuleGroup)">
            <summary>
                Compares two <see cref="T:WindowsFirewallHelper.FirewallWASRuleGroup" /> objects for inequality
            </summary>
            <param name="left">A <see cref="T:WindowsFirewallHelper.FirewallWASRuleGroup" /> object</param>
            <param name="right">A <see cref="T:WindowsFirewallHelper.FirewallWASRuleGroup" /> object</param>
            <returns>true if two sides are not equal; otherwise false</returns>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASRuleGroup.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASRuleGroup.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASRuleGroup.ToString">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASRuleGroup.DisableRuleGroup(WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Disables all rules in specific firewall profile that are part of this rule group
            </summary>
            <param name="profiles">The firewall profile to disable rules in</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASRuleGroup.EnableRuleGroup(WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Enables all rules in specific firewall profile that are part of this rule group
            </summary>
            <param name="profiles">The firewall profile to enable rules in</param>
        </member>
        <member name="M:WindowsFirewallHelper.FirewallWASRuleGroup.IsRuleGroupEnable(WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Returns a Boolean value indicating if the rules in the specific firewall profile that belong to this rule group are
                enable
            </summary>
            <param name="profiles">The firewall profile to check the rules status from</param>
            <returns>true if rules are enable; otherwise false.</returns>
        </member>
        <member name="T:WindowsFirewallHelper.IAddress">
            <summary>
                Defines expected methods of a network address
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.IAddress.ToString">
            <summary>
                Converts the value of the <see cref="T:WindowsFirewallHelper.IAddress" /> to a human and machine readable format
            </summary>
            <returns>String value describing the value of the object</returns>
        </member>
        <member name="T:WindowsFirewallHelper.IFirewall">
            <summary>
                Defines expected methods and properties of a firewall program or API
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewall.Name">
            <summary>
                Gets the name of the firewall
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewall.Profiles">
            <summary>
                Gets the list of all available profiles of the firewall
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewall.Rules">
            <summary>
                Gets the list of all registered rules of the firewall
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.String,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Creates a rule about an executable file (application) to be registered to a firewall profile
            </summary>
            <param name="profiles">The profile or profiles that the rule belongs to</param>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="filename">Address of the executable file that the rule applies to</param>
            <param name="protocol">Protocol that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.String)">
            <summary>
                Creates a rule about an executable file (application) to be registered to a firewall profile
            </summary>
            <param name="profiles">The profile or profiles that the rule belongs to</param>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="filename">Address of the executable file that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreateApplicationRule(WindowsFirewallHelper.FirewallProfiles,System.String,System.String)">
            <summary>
                Creates a rule about an executable file (application) to be registered to a firewall profile
            </summary>
            <param name="profiles">The profile or profiles that the rule belongs to</param>
            <param name="name">Name of the rule</param>
            <param name="filename">Address of the executable file that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreateApplicationRule(System.String,WindowsFirewallHelper.FirewallAction,System.String,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Creates a rule about an executable file (application) to be registered to the current firewall profile
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="filename">Address of the executable file that the rule applies to</param>
            <param name="protocol">Protocol that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreateApplicationRule(System.String,WindowsFirewallHelper.FirewallAction,System.String)">
            <summary>
                Creates a rule about an executable file (application) to be registered the current firewall profile
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="filename">Address of the executable file that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreateApplicationRule(System.String,System.String)">
            <summary>
                Creates a rule about an executable file (application) to be registered the current firewall profile
            </summary>
            <param name="name">Name of the rule</param>
            <param name="filename">Address of the executable file that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.UInt16,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Creates a rule about a port to be registered to a firewall profile
            </summary>
            <param name="profiles">The profile or profiles that the rule belongs to</param>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="portNumber">Port number that the rule applies to</param>
            <param name="protocol">Protocol that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,WindowsFirewallHelper.FirewallAction,System.UInt16)">
            <summary>
                Creates a rule about a TCP port to be registered to a firewall profile
            </summary>
            <param name="profiles">The profile or profiles that the rule belongs to</param>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="portNumber">Port number that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreatePortRule(WindowsFirewallHelper.FirewallProfiles,System.String,System.UInt16)">
            <summary>
                Creates a rule about a TCP port to be registered to a firewall profile
            </summary>
            <param name="profiles">The profile or profiles that the rule belongs to</param>
            <param name="name">Name of the rule</param>
            <param name="portNumber">Port number that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreatePortRule(System.String,WindowsFirewallHelper.FirewallAction,System.UInt16,WindowsFirewallHelper.FirewallProtocol)">
            <summary>
                Creates a rule about a port to be registered to the current firewall profile
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="portNumber">Port number that the rule applies to</param>
            <param name="protocol">Protocol that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreatePortRule(System.String,WindowsFirewallHelper.FirewallAction,System.UInt16)">
            <summary>
                Creates a rule about a TCP port to be registered to the current firewall profile
            </summary>
            <param name="name">Name of the rule</param>
            <param name="action">Action of the rule</param>
            <param name="portNumber">Port number that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.Reload">
            <summary>
                Creates a new instance of the underlying COM object and clears all caches.
                Previously returned objects that are bound to the firewall COM object might not work as expected.
            </summary>
            <returns>Returns the current instance of the <see cref="T:WindowsFirewallHelper.IFirewall" /> interface that can be used for method chaining.</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.CreatePortRule(System.String,System.UInt16)">
            <summary>
                Creates a rule about a TCP port to be registered to the current firewall profile
            </summary>
            <param name="name">Name of the rule</param>
            <param name="portNumber">Port number that the rule applies to</param>
            <returns>Returns the newly created rule object implementing <see cref="T:WindowsFirewallHelper.IFirewallRule" /> interface</returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.GetActiveProfile">
            <summary>
                Returns the active firewall profile, if any
            </summary>
            <returns>
                The active firewall profile object implementing <see cref="T:WindowsFirewallHelper.IFirewallProfile" /> interface or null if no firewall
                profile is currently active
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.IFirewall.GetProfile(WindowsFirewallHelper.FirewallProfiles)">
            <summary>
                Returns a specific firewall profile
            </summary>
            <param name="profile">Requested firewall profile</param>
            <returns>Firewall profile object implementing <see cref="T:WindowsFirewallHelper.IFirewallProfile" /> interface</returns>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewall.TypeResolver">
            <summary>
                Gets the active COM+ Object resolver instance
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.IFirewallProfile">
            <summary>
                Defines expected properties of a firewall profile
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallProfile.BlockAllInboundTraffic">
            <summary>
                Gets or sets a Boolean value that blocks all inbound traffic completely regardless of any rules in this profile
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallProfile.DefaultInboundAction">
            <summary>
                Gets or sets the global default behavior regarding inbound traffic
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallProfile.DefaultOutboundAction">
            <summary>
                Gets or sets the global default behavior regarding outbound traffic
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallProfile.Enable">
            <summary>
                Gets a Boolean value showing if this firewall profile is enable and available
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallProfile.IsActive">
            <summary>
                Gets a Boolean value showing if this firewall profile is the currently active profile.
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallProfile.ShowNotifications">
            <summary>
                Gets or sets a value indicating if the user should get notifications about rules of this profile
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallProfile.Type">
            <summary>
                Gets a FirewallProfiles showing the type of this firewall profile
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallProfile.UnicastResponsesToMulticastBroadcast">
            <summary>
                Gets or sets a value indicating if the firewall should send unicast responses to the multicast broadcasts
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.IFirewallRule">
            <summary>
                Defines expected properties of a firewall rule
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.Action">
            <summary>
                Gets or sets the action that the rules defines
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.ApplicationName">
            <summary>
                Gets or sets the name of the application that this rule is about
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.Direction">
            <summary>
                Gets or sets the data direction that the rule applies to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.FriendlyName">
            <summary>
                Gets or sets the resolved name of the rule
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.IsEnable">
            <summary>
                Gets or sets a Boolean value indicating if this rule is active
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.LocalAddresses">
            <summary>
                Gets or sets the local addresses that the rule applies to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.LocalPorts">
            <summary>
                Gets or sets the local ports that the rule applies to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.LocalPortType">
            <summary>
                Gets or sets the type of local ports that the rules applies to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.Name">
            <summary>
                Gets or sets the name of the rule in native format w/o auto string resolving
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.Profiles">
            <summary>
                Gets the profiles that this rule belongs to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.Protocol">
            <summary>
                Gets or sets the protocol that the rule applies to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.RemoteAddresses">
            <summary>
                Gets or sets the remote addresses that the rule applies to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.RemotePorts">
            <summary>
                Gets or sets the remote ports that the rule applies to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.Scope">
            <summary>
                Gets or sets the scope that the rule applies to
            </summary>
        </member>
        <member name="P:WindowsFirewallHelper.IFirewallRule.ServiceName">
            <summary>
                Gets or sets the name of the service that this rule is about
            </summary>
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.CopyTo(System.Array,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.System#Collections#ICollection#IsSynchronized">
            <inheritdoc cref="P:System.Collections.ICollection.IsSynchronized" />
        </member>
        <member name="P:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.System#Collections#ICollection#SyncRoot">
            <inheritdoc cref="P:System.Collections.ICollection.SyncRoot" />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.Add(`3)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.Clear">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.Contains(`3)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.CopyTo(`3[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.Count">
            <inheritdoc cref="P:System.Collections.ICollection.Count" />
        </member>
        <member name="P:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.Remove(`3)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.Contains(`2)">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.Item(`2)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.Remove(`2)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComCollectionBase`4.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComEnumerator`2.Dispose">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.InternalHelpers.Collections.ComEnumerator`2.System#Collections#IEnumerator#Current">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComEnumerator`2.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComEnumerator`2.Reset">
            <inheritdoc />
        </member>
        <member name="P:WindowsFirewallHelper.InternalHelpers.Collections.ComEnumerator`2.Current">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComEnumerator`2.Finalize">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComNativeCollectionBase`3.#ctor(`0)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComNativeCollectionBase`3.ConvertManagedToNative(`1)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.ComNativeCollectionBase`3.ConvertNativeToManaged(`1)">
            <inheritdoc />
        </member>
        <member name="T:WindowsFirewallHelper.InternalHelpers.Collections.IComCollection`2">
            <inheritdoc cref="T:System.Collections.ICollection" />
            <summary>Represents a generic collection of COM object representations.</summary>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="P:WindowsFirewallHelper.InternalHelpers.Collections.IComCollection`2.Item(`0)">
            <summary>Gets or sets the element with the specified key.</summary>
            <param name="key">The key of the element to get or set.</param>
            <returns>The element with the specified key.</returns>
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.IComCollection`2.Contains(`0)">
            <summary>
                Determines whether the <see cref="T:WindowsFirewallHelper.InternalHelpers.Collections.IComCollection`2"></see> contains an element with the specified
                key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:WindowsFirewallHelper.InternalHelpers.Collections.IComCollection`2"></see>.</param>
            <returns>true if the <see cref="T:WindowsFirewallHelper.InternalHelpers.Collections.IComCollection`2"></see> contains an element with the key; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key">key</paramref> is null.</exception>
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.Collections.IComCollection`2.Remove(`0)">
            <summary>Removes the element with the specified key from the <see cref="T:WindowsFirewallHelper.InternalHelpers.Collections.IComCollection`2"></see>.</summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
                true if the element is successfully removed; otherwise, false.  This method also returns false if
                <paramref name="key">key</paramref> was not found in the original
                <see cref="T:WindowsFirewallHelper.InternalHelpers.Collections.IComCollection`2"></see>.
            </returns>
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.ThreadSafeSingleton.ThreadInfo.Equals(WindowsFirewallHelper.InternalHelpers.ThreadSafeSingleton.ThreadInfo)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.ThreadSafeSingleton.ThreadInfo.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WindowsFirewallHelper.InternalHelpers.ThreadSafeSingleton.ThreadInfo.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:WindowsFirewallHelper.InternetControlMessageKnownTypes">
            <summary>
                List of known ICM types for Internet Control Message Protocol
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.EchoReply">
            <summary>
                Echo Reply Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.DestinationUnreachable">
            <summary>
                Destination Unreachable Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.SourceQuench">
            <summary>
                Source Quench Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.Redirect">
            <summary>
                Redirect Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.AlternateHostAddress">
            <summary>
                Alternate Host Address Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.Echo">
            <summary>
                Echo Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.RouterAdvertisement">
            <summary>
                Router Advertisement Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.RouterSelection">
            <summary>
                Router Selection Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.TimeExceeded">
            <summary>
                Time Exceeded Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.ParameterProblem">
            <summary>
                Parameter Problem Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.Timestamp">
            <summary>
                Timestamp Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.TimestampReply">
            <summary>
                Timestamp Reply Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.InformationRequest">
            <summary>
                Information Request Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.InformationReply">
            <summary>
                Information Reply Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.AddressMaskRequest">
            <summary>
                Address Mask Request Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.AddressMaskReply">
            <summary>
                Address Mask Reply Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.TraceRoute">
            <summary>
                Trace-route Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.DatagramConversionError">
            <summary>
                Datagram Conversion Error Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.MobileHostRedirect">
            <summary>
                Mobile Host Redirect Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.IPv6WhereAreYou">
            <summary>
                IPv6 'Where Are You' Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.IPv6IAmHere">
            <summary>
                IPv6 'I Am Here' Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.MobileRegistrationRequest">
            <summary>
                Mobile Registration Request Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.MobileRegistrationReply">
            <summary>
                Mobile Registration Reply Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.DomainNameRequest">
            <summary>
                Domain Name Request Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.DomainNameReply">
            <summary>
                Domain Name Reply Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.Skip">
            <summary>
                Skip Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypes.Photuris">
            <summary>
                Photuris Message
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.InternetControlMessageKnownTypesV6">
            <summary>
                List of known ICM types of Internet Control Message Protocol version 6 (ICMPv6)
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.DestinationUnreachable">
            <summary>
                Destination Unreachable Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.PacketTooBig">
            <summary>
                Packet Too Big Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.TimeExceeded">
            <summary>
                Time Exceeded Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.ParameterProblem">
            <summary>
                Parameter Problem Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.EchoRequest">
            <summary>
                Echo Request Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.EchoReply">
            <summary>
                Echo Reply Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.MulticastListenerQuery">
            <summary>
                Multicast Listener Query Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.MulticastListenerReport">
            <summary>
                Multicast Listener Report Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.MulticastListenerDone">
            <summary>
                Multicast Listener Done Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.RouterSolicitation">
            <summary>
                Router Solicitation Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.RouterAdvertisement">
            <summary>
                Router Advertisement Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.NeighborSolicitation">
            <summary>
                Neighbor Solicitation Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.NeighborAdvertisement">
            <summary>
                Neighbor Advertisement Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.Redirect">
            <summary>
                Redirect Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.RouterRenumbering">
            <summary>
                Router Renumbering Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.ICMPNodeInformationQuery">
            <summary>
                ICMP Node Information Query Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.ICMPNodeInformationResponse">
            <summary>
                ICMP Node Information Response Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.InverseNeighborDiscoverySolicitation">
            <summary>
                Inverse Neighbor Discovery Solicitation Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.InverseNeighborDiscoveryAdvertisement">
            <summary>
                Inverse Neighbor Discovery Advertisement Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.MulticastListenerReportVersion2">
            <summary>
                Multicast Listener Report Version 2 Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.HomeAgentAddressDiscoveryRequest">
            <summary>
                Home Agent Address Discovery Request Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.HomeAgentAddressDiscoveryReply">
            <summary>
                Home Agent Address Discovery Reply Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.MobilePrefixSolicitation">
            <summary>
                Mobile Prefix Solicitation Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.MobilePrefixAdvertisement">
            <summary>
                Mobile Prefix Advertisement Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.CertificationPathSolicitation">
            <summary>
                Certification Path Solicitation Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.CertificationPathAdvertisement">
            <summary>
                Certification Path Advertisement Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.MulticastRouterAdvertisement">
            <summary>
                Multicast Router Advertisement Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.MulticastRouterSolicitation">
            <summary>
                Multicast Router Solicitation Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.MulticastRouterTermination">
            <summary>
                Multicast Router Termination Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.FMIPv6Messages">
            <summary>
                Fast Handover for Mobile Internet Protocol (FMIPv6) Messages
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.RPLControl">
            <summary>
                'Routing Protocol for Low-Power and Lossy Networks' Control Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.ILNPv6LocatorUpdate">
            <summary>
                Locator Network Protocol (ILNPv6) Locator Update Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.DuplicateAddressRequest">
            <summary>
                Duplicate Address Request Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.DuplicateAddressConfirmation">
            <summary>
                Duplicate Address Confirmation Message
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.InternetControlMessageKnownTypesV6.MPLControl">
            <summary>
                'Multicast Protocol for Low-Power and Lossy' Control Message
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.IPSecSecurityLevel">
            <summary>
                Internet Protocol Security level
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.IPSecSecurityLevel.None">
            <summary>
                No Internet Protocol Security
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.IPSecSecurityLevel.IPSecNoEncapsulation">
            <summary>
                Internet Protocol Security with no encapsulation security payload (ESP)
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.IPSecSecurityLevel.IPSecWithIntegrityProtection">
            <summary>
                Internet Protocol Security with integrity protection check value (ICV)
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.IPSecSecurityLevel.IPSecWithEncryptionNegotiation">
            <summary>
                Internet Protocol Security with negotiation and mutual decision about the encryption level
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.IPSecSecurityLevel.IPSecWithFullEncryption">
            <summary>
                Internet Protocol Security with full encryption of data
            </summary>
        </member>
        <member name="T:WindowsFirewallHelper.NetworkInterfaceTypes">
            <summary>
                Type of the network interface
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.NetworkInterfaceTypes.RemoteAccess">
            <summary>
                Remove access
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.NetworkInterfaceTypes.Wireless">
            <summary>
                Wireless (Wi-Fi)
            </summary>
        </member>
        <member name="F:WindowsFirewallHelper.NetworkInterfaceTypes.Lan">
            <summary>
                Local Area Network (Ethernet)
            </summary>
        </member>
    </members>
</doc>
